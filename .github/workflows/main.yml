name: Build and Analyze with SonarQube

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      COVERAGE_RESULTS: coverage_results # Directory where coverage results will be placed

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up CMake
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --yes

      - name: Install Build Wrapper
        run: |
          curl -L -o build-wrapper-win-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip
          unzip build-wrapper-win-x86.zip -d build-wrapper

      - name: Run Build Wrapper
        run: |
          build-wrapper/build-wrapper-win-x86-64.exe --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake -B build
          cmake --build build

      - name: Run tests with coverage
        run: |
          cd build
          ctest . --output-on-failure
          cd ..
          gcovr -r . --html --html-details -o ${{ env.COVERAGE_RESULTS }}/coverage.html

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
            --define sonar.cfamily.gcovr.reportsPath="${{ env.COVERAGE_RESULTS }}/coverage.html"
